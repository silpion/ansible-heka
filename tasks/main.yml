---
- name: Assert platform is supported
  tags: heka
  assert:
    that:
      - ansible_os_family in heka_supported_platforms


- name: Load version vars
  tags: heka
  with_first_found:
    - ../vars/versions/{{ ansible_os_family }}/{{ heka_version }}.yml
    - ../vars/versions/default.yml
  include_vars: "{{ item }}"


- name: Assert version vars
  tags: heka
  assert:
    that:
      - heka_install_filename_sha256sum not in (None, "")


- name: Include OS specific vars
  tags: heka
  include_vars: "{{ ansible_os_family }}.yml"


- name: Include util get/put instructions
  tags: heka
  include: util.yml


- include: Debian.yml
  tags: heka
  when: ansible_os_family == 'Debian'

- include: RedHat.yml
  tags: heka
  when: ansible_os_family == 'RedHat'


- name: Install hekad directories
  tags: heka
  become: true
  with_items:
    - "{{ heka_hekad_etc_dir }}"
    - "{{ heka_hekad_base_dir }}/dashboard"
  file:
    state: directory
    owner: 0
    group: 0
    mode: 0755
    dest: "{{ item }}"


- name: Install hekad configuration
  tags: heka
  become: true
  notify: service restart hekad
  template:
    src: hekad.toml.j2
    dest: "{{ heka_hekad_etc_dir }}/hekad.toml"
    owner: 0
    group: 0
    mode: 0644

- name: Install heka tasks configuration
  tags: heka
  become: true
  notify: service restart hekad
  with_subelements:
    - heka_tasks
    - options
  ini_file:
    dest: "{{ heka_hekad_etc_dir }}/{{ item.0.file }}.toml"
    section: "{{ item.0.section }}"
    option: "{{ item.1.option }}"
    value: "{{ item.1.value }}"

- name: Copy additional heka plugins
  tags: heka
  notify: service restart hekad
  with_items: "{{ heka_plugins }}"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: 0
    group: 0
    mode: 0644

- name: Install hekad service
  tags: heka
  include: service.yml

- name: Ensure heka service
  tags: heka
  become: true
  service:
    state: started
    enabled: true
    name: "{{ heka_service_name }}"
