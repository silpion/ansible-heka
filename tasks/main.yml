---
- name: Assert platform is supported
  tags: heka
  assert:
    that:
      - ansible_os_family in heka_supported_platforms


- name: Load version vars
  tags: heka
  with_first_found:
    - ../vars/versions/{{ heka_version }}.yml
    - ../vars/versions/default.yml
  include_vars: "{{ item }}"


- name: Assert version vars
  tags: heka
  assert:
    that:
      - heka_install_filename_sha256sum not in (None, "")

- name: Configure service management
  tags: heka
  include_vars: "service/{{ ansible_local['util']['init']['system'] }}.yml"

- name: Include util get/put instructions
  tags: heka
  include: util.yml

- name: Stop heka service if istall or update
  tags: heka
  when: ( ansible_local.preferences.general.heka_installed_version is undefined ) or
        ( ansible_local.preferences.general.heka_installed_version != heka_version )
  become: true
  service:
    state: stopped
    enabled: true
    name: "{{ heka_service_name }}"

- name: Install heka
  tags: heka
  when: ( ansible_local.preferences.general.heka_installed_version is undefined ) or
        ( ansible_local.preferences.general.heka_installed_version != heka_version )
  become: true
  shell:  "tar --extract --directory=/usr/ --overwrite --strip-components=1 --file={{ util_persistent_data_path_remote }}/{{ heka_install_filename }} "

- name: Install hekad directories
  tags: heka
  become: true
  with_items:
    - "{{ heka_hekad_etc_dir }}"
    - "{{ heka_hekad_base_dir }}/dashboard"
  file:
    state: directory
    owner: 0
    group: 0
    mode: 0755
    dest: "{{ item }}"

- name: Install hekad configuration
  tags: heka
  become: true
  notify: service restart hekad
  template:
    src: hekad.toml.j2
    dest: "{{ heka_hekad_etc_dir }}/hekad.toml"
    owner: 0
    group: 0
    mode: 0644

- name: Install heka tasks configuration
  tags: heka
  become: true
  notify: service restart hekad
  with_subelements:
    - heka_tasks
    - options
  ini_file:
    dest: "{{ heka_hekad_etc_dir }}/{{ item.0.file }}.toml"
    section: "{{ item.0.section }}"
    option: "{{ item.1.option }}"
    value: "{{ item.1.value }}"

- name: Copy additional heka plugins
  tags: heka
  notify: service restart hekad
  with_items: "{{ heka_plugins }}"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: 0
    group: 0
    mode: 0644

- name: Install Ansible facts.d directory
  tags: heka
  become: yes
  file:
    state=directory
    dest=/etc/ansible/facts.d
    owner=0
    group=0
    mode=0755

- name: Install heka facts
  tags: heka
  become: yes
  template:
    src=facts.j2
    dest=/etc/ansible/facts.d/heka.fact
    owner=0
    group=0
    mode=0644

- name: Install hekad service
  tags: heka
  include: service.yml

- name: Ensure heka service
  tags: heka
  become: true
  service:
    state: started
    enabled: true
    name: "{{ heka_service_name }}"
